! 	Users

    script User

    import div Container and variable Mobile

    form LoginDiv
    div ButtonDiv
    div EmailDiv
    div ResetDiv
    div PasswordDiv
    div Password2Div
    div NameDiv
    div ConfirmationDiv
    div MessageDiv
    label Label
    input EmailInput
    input ResetInput
    input PasswordInput
    input Password2Input
    input NameInput
    input ConfirmationInput
    button LoginButton
    button RegisterButton
    button ResetPasswordButton
    button RestartButton
    button LogoutButton
    button CancelButton
    variable LabelWidth
    variable FieldWidth
    variable FieldHeight
    variable Record
    variable PasswordHash
    variable ConfirmationCode
    variable ResetStage2
    variable UserName
    variable Email
    variable Password
    variable Name
    variable Message
    
!	 debug step

    put 25 into LabelWidth
    put 78 into FieldWidth
    put `height:2em` into FieldHeight
    get Email from storage as `user.email`
    get Password from storage as `user.password`
    get Name from storage as `user.name`

    set the style of Container to
    	`width:50%;height:auto;margin:1em auto 0 auto;background:#ffc`
    
    create LoginDiv in Container
    
    if Mobile
    begin
      set the style of LoginDiv to `padding:0.5em;border:1px solid black;display:flex;flex-direction:column`
    
  	  create EmailDiv in LoginDiv
      create Label in EmailDiv
      set the content of Label to `Email:`
      create EmailInput in EmailDiv
      set style `width` of EmailInput to `calc(100% - 1em)`

  	  create PasswordDiv in LoginDiv
      create Label in PasswordDiv
      set the content of Label to `Password:`
      create PasswordInput in PasswordDiv
      set style `width` of PasswordInput to `calc(100% - 1em)`
      set attribute `type` of PasswordInput to `password`

  	  create Password2Div in LoginDiv
      set the style of Password2Div to `display:none`
      create Label in Password2Div
      set the content of Label to `Password&nbsp;(again):`
      create Password2Input in Password2Div
      set style `width` of Password2Input to `calc(100% - 1em)`
      set attribute `type` of Password2Input to `password`

  	  create ResetDiv in LoginDiv
      set the style of ResetDiv to `display:none`
      create Label in ResetDiv
      set the content of Label to `Reset Code:`
      create ResetInput in ResetDiv
      set style `width` of ResetInput to `calc(100% - 1em)`

  	  create NameDiv in LoginDiv
      set the style of NameDiv to `display:none`
      create Label in NameDiv
      set the content of Label to `Reset Code:`
      create NameInput in NameDiv
      set style `width` of NameInput to `calc(100% - 1em)`

  	  create ConfirmationDiv in LoginDiv
      set the style of ConfirmationDiv to `display:none`
      create Label in ConfirmationDiv
      set the content of Label to `Confirmation Code:`
      create ConfirmationInput in ConfirmationDiv
      set style `width` of ConfirmationInput to `calc(100% - 1em)`
    end
    else
    begin
      set the style of LoginDiv to `padding:0.5em;border:1px solid black`
      create EmailDiv in LoginDiv
      set style `display` of EmailDiv to `flex`
      create Label in EmailDiv
      set the style of Label to `padding-top:0.8em;flex:` cat LabelWidth
      set the content of Label to `Email:`
      create EmailInput in EmailDiv
      set the style of EmailInput to FieldHeight cat `;padding:4px;flex:` cat FieldWidth
      set the size of EmailInput to 40

      create PasswordDiv in LoginDiv
      if not Mobile set style `display` of PasswordDiv to `flex`
      create Label in PasswordDiv
      set the style of Label to `padding-top:0.8em;flex:` cat LabelWidth
      set the content of Label to `Password:`
      create PasswordInput in PasswordDiv
      set the style of PasswordInput to FieldHeight cat `;flex:` cat FieldWidth
      set the size of PasswordInput to 40
      set attribute `type` of PasswordInput to `password`

      create Password2Div in LoginDiv
      set the style of Password2Div to `display:none`
      create Label in Password2Div
      set the style of Label to `padding-top:0.8em;flex:` cat LabelWidth
      set the content of Label to `Password&nbsp;(again):`
      create Password2Input in Password2Div
      set the style of Password2Input to FieldHeight cat `;flex:` cat FieldWidth
      set the size of Password2Input to 40
      set attribute `type` of Password2Input to `password`

      create ResetDiv in LoginDiv
      set the style of ResetDiv to `display:none`
      create Label in ResetDiv
      set the style of Label to `padding-top:0.8em;flex:` cat LabelWidth
      set the content of Label to `Reset Code:`
      create ResetInput in ResetDiv
      set the style of ResetInput to FieldHeight cat `;padding:4px;flex:` cat FieldWidth
      set the size of ResetInput to 6

      create NameDiv in LoginDiv
      set the style of NameDiv to `display:none`
      create Label in NameDiv
      set the style of Label to `padding-top:0.8em;flex:` cat LabelWidth
      set the content of Label to `Name&nbsp;or&nbsp;Nickname:`
      create NameInput in NameDiv
      set the style of NameInput to FieldHeight cat `;padding:4px;flex:` cat FieldWidth
      set the size of NameInput to 40

      create ConfirmationDiv in LoginDiv
      set the style of ConfirmationDiv to `display:none`
      create Label in ConfirmationDiv
      set the style of Label to `padding-top:0.8em;flex:` cat LabelWidth
      set the content of Label to `Confirmation Code:`
      create ConfirmationInput in ConfirmationDiv
      set the style of ConfirmationInput to FieldHeight cat `;padding:4px;flex:` cat FieldWidth
      set the size of ConfirmationInput to 6
    end

!	Create the buttons
    create ButtonDiv in LoginDiv
    set the style of ButtonDiv to `flex:` cat FieldWidth
    if Mobile set style `flex-direction` of ButtonDiv to `column`
    else set style `margin-top` of ButtonDiv to `1em`
    
    create LoginButton in ButtonDiv
    if Mobile set the style of LoginButton to `width:100%;margin-top:1em`
    else set style `margin-right` of LoginButton to `1em`
    set the text of LoginButton to `Login`
    on click LoginButton go to ProcessLogin
    
    create RegisterButton in ButtonDiv
    if Mobile set the style of RegisterButton to `width:100%;margin-top:1em`
    else set style `margin-right` of RegisterButton to `1em`
    set the text of RegisterButton to `Register`
    on click RegisterButton go to Register

    create ResetPasswordButton in ButtonDiv
    if Mobile set the style of ResetPasswordButton to `width:100%;margin-top:1em`
    else set style `margin-right` of ResetPasswordButton to `1em`
    set the text of ResetPasswordButton to `Reset Password`
    on click ResetPasswordButton
    begin
    	if ResetStage2 go to ResetPassword2
        else go to ResetPassword
    end

    create RestartButton in ButtonDiv
    if Mobile set the style of RestartButton to `width:100%;margin-top:1em`
    else set style `margin-right` of RestartButton to `1em`
    set style `display` of RestartButton to `none`
    set the text of RestartButton to `Restart`
    on click RestartButton go to GoBack
    
    create LogoutButton in ButtonDiv
    if Mobile set the style of LogoutButton to `width:100%;margin-top:1em`
    else set style `margin-right` of LogoutButton to `1em`
    set the text of LogoutButton to `Log out`
    if Name is empty set style `display` of LogoutButton to `none`
    on click LogoutButton go to Logout
    
    create CancelButton in ButtonDiv
    if Mobile set the style of CancelButton to `width:100%;margin-top:1em`
    set the text of CancelButton to `Cancel`
    on click CancelButton go to Exit

    create MessageDiv in LoginDiv
    set the style of MessageDiv to `padding:1em;text-align:center;display:none`
    
    set the content of EmailInput to ``
    set the content of PasswordInput to ``

    set the text of EmailInput to Email
    set the text of PasswordInput to Password
    set the text of NameInput to Name
    
    clear ResetStage2
    stop

!	Process a login request
ProcessLogin:
    if EmailInput is empty go to FillAllFields
    if PasswordInput is empty go to FillAllFields
    put the text of EmailInput into Email
    put the text of PasswordInput into Password

GetUserRecord:
    rest get Name from `verify/` cat Email cat `/` cat Password or go to NoRecord
    if Name is not empty
    begin
      	gosub to SaveUserDetails
      	set style `display` of LoginDiv to `none`
        gosub to SaveUserDetails
        send `login` to parent
      	go to Exit
    end

!	Deal with no record error
NoRecord:
    gosub to ClearStorage
    put `No record exists or incorrect password for ` cat EmailInput cat `.` into Message
    go to ShowErrorMessage

! Show the login form
ShowLoginForm:
	set style `display` of LoginDiv to `block`
    stop

ClearStorage:
    put empty into storage as `user.email`
    put empty into storage as `user.password`
	return

SaveUserDetails:
	put Email into storage as `user.email`
	put Password into storage as `user.password`
	put Name into storage as `user.name`
	return

!	Register as new user
Register:
    gosub to HideMessage
!    set style `display` of PasswordDiv to `flex`
    if Mobile
    begin
    	set style `display` of Password2Div to `block`
        set style `display` of NameDiv to `block`
        set style `display` of RegisterButton to `block`
        set style `display` of RestartButton to `block`
    end
    else
    begin
    	set style `display` of Password2Div to `flex`
        set style `display` of NameDiv to `flex`
        set style `display` of RegisterButton to `inline-block`
        set style `display` of RestartButton to `inline-block`
    end
    set style `display` of ResetDiv to `none`
    set style `display` of LoginButton to `none`
    set style `display` of ResetPasswordButton to `none`
    on click RegisterButton go to ProcessRegistration
    stop

!	Process the registration
ProcessRegistration:
    if EmailInput is empty go to FillAllFields
    if PasswordInput is empty go to FillAllFields
    if Password2Input is empty go to FillAllFields
    if NameInput is empty go to FillAllFields
    if PasswordInput is not Password2Input
    begin
       	put `Passwords do not match` into Message
        go to ShowErrorMessage
    end

    put the text of EmailInput into Email
    put the text of PasswordInput into Password
    put the text of NameInput into Name
    rest get Record from `email/` cat Email or goto Confirm
    if Record is not empty go to EmailExists
    rest get Record from `name/` cat Name or goto Confirm
    if Record is not empty go to NameExists

Confirm:
    put random 900000 into ConfirmationCode
    add 100000 to ConfirmationCode
    set Record to object
    set property `from` of Record to `admin@normanton.life`
    set property `to` of Record to EmailInput
    set property `subject` of Record to `Confirmation code`
    set property `message` of Record to `<html><body>`
      	cat `Hi ` cat NameInput cat `<br /><br />`
      	cat `Please use this code to confirm your registration at Normanton Life:<br />`
      	cat `<h1>` cat ConfirmationCode cat `</h1>`
      	cat `If you did not request this email, please ignore it and no action will be taken.`
      	cat `</body></html>`
    rest post Record to `sendmail`
    set style `display` of ConfirmationDiv to `flex`
    set the text of RegisterButton to `Confirm registration`
    on click RegisterButton
    begin
      	if ConfirmationInput is not ConfirmationCode
      	begin
        	put `Invalid confirmation code - no action taken.` into Message
        	go to ShowErrorMessage
      	end
      	gosub to SaveUserDetails
      	set Record to object
      	set property `email` of Record to EmailInput
      	rest get PasswordHash from `_hash/` cat PasswordInput
      	set property `password` of Record to PasswordHash
      	set property `name` of Record to NameInput
      	rest post Record to `user`
      	set style `display` of ConfirmationDiv to `none`
      	set the text of RegisterButton to `Register`
      	gosub to SaveUserDetails
        go to Exit
    end
    wait 10 ticks
    put `We have sent a confirmation code to ` cat Email cat `.` cat newline
      	cat `When it arrives, type or paste it in the "Confirmation Code" box `
      	cat `and click "Confirm Registration".` into Message
    go to ShowMessage

!	Email is already in use
EmailExists:
    put `A record already exists for ` cat Email cat `.` into Message
    go to ShowErrorMessage

!	Name is already in use
NameExists:
    put `A record already exists for ` cat Name cat `.` into Message
    go to ShowErrorMessage

!	One or more fields are empty
FillAllFields:
    put `Please fill in all the fields.` into Message
    go to ShowErrorMessage

!	Reset the password
ResetPassword:
    set style `display` of ResetDiv to `none`
    set style `display` of PasswordDiv to `none`
    set style `display` of Password2Div to `none`
    set style `display` of LoginButton to `none`
    set style `display` of RegisterButton to `none`
    set style `display` of ResetPasswordButton to `inline-block`
    set style `display` of RestartButton to `inline-block`
    set ResetStage2
    wait 10 ticks
    put `Please type the email you used for your registration then click Reset Password.` into Message
    go to ShowMessage

!	Process the password reset
ResetPassword2:
    if EmailInput is empty go to FillAllFields
    rest get Record from `email/` cat EmailInput
    if Record is empty
    begin
        put `No record exists for ` cat EmailInput cat `.` into Message
        go to ShowErrorMessage
    end
    put property `name` of Record into UserName
    put random 900000 into ConfirmationCode
    add 100000 to ConfirmationCode
    set Record to object
    set property `from` of Record to `admin@normanton.life`
    set property `to` of Record to EmailInput
    set property `subject` of Record to `Password reset key`
    set property `message` of Record to `<html><body>`
      	cat `Hi ` cat NameInput cat `<br /><br />`
      	cat `Please use this code to confirm your password reset request at Normanton Life:<br />`
      	cat `<h1>` cat ConfirmationCode cat `</h1>`
      	cat `If you did not request this email, please ignore it and no action will be taken.`
      	cat `</body></html>`
    rest post Record to `sendmail`
    set style `display` of ResetDiv to `flex`
    set style `display` of PasswordDiv to `flex`
    set the content of PasswordInput to ``
    set style `display` of Password2Div to `flex`
    set the content of Password2Input to ``
    set the text of ConfirmationInput to ``
    on click ResetPasswordButton go to ResetPassword3
    wait 10 ticks
    put `We have sent a password reset code to ` cat Email cat `.` cat newline
      	cat `When it arrives, use it on this screen to confirm your new password.` into Message
    go to ShowMessage

!	Confirm new password
ResetPassword3:
    if PasswordInput is empty go to FillAllFields
    if Password2Input is empty go to FillAllFields
    if PasswordInput is not Password2Input
    begin
        put `Passwords do not match` into Message
        go to ShowErrorMessage
    end
    if ResetInput is not ConfirmationCode
    begin
        put `Invalid password reset code - no action taken.` into Message
        go to ShowErrorMessage
    end
    set Record to object
    set property `email` of Record to Email
    put the text of PasswordInput into Password
    rest get PasswordHash from `_hash/` cat Password
    set property `password` of Record to PasswordHash
    set property `name` of Record to UserName
    rest post Record to `user`
    gosub to SaveUserDetails
    go to Exit

!	Go back to the initial state (restart)
GoBack:
    set style `display` of ResetDiv to `none`
    set style `display` of PasswordDiv to `flex`
    set style `display` of Password2Div to `none`
    set style `display` of NameDiv to `none`
    set style `display` of LoginButton to `inline-block`
    set style `display` of RestartButton to `none`
    clear ResetStage2
    gosub to HideMessage
    on click RegisterButton go to Register
    stop

Logout:
	put empty into storage as `user.name`
    goto Exit

ShowErrorMessage:
	set style `color` of MessageDiv to `FireBrick`
    go to SM2

ShowMessage:
	set style `color` of MessageDiv to `black`
SM2:
	set the content of MessageDiv to Message
    set style `display` of MessageDiv to `block`
	stop

HideMessage:
    set style `display` of MessageDiv to `none`
	return

!	Exit: close the form
Exit:
    gosub to HideMessage
    exit